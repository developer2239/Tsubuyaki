############################
### ブランチを新たに切る　##
############################

# ブランチをすべて見る
git branch -a

# ブランチを作る元のブランチに移動
git checkout master

# ブランチを作成
# ※#2(issue名)などの#から始まる名前はつけられない
git checkout -b 作成するブランチ名

####ブランチをリモートに登録(この手順は初回のみ)
git push -u origin 作成したブランチ名

# コードプッシュ後、ブランチを削除する
git branch -d 対象ブランチ名

# リモートブランチを削除する
git push --delete origin ブランチ名

# 削除されたリモートブランチをローカルに適用
git fetch --prune 

#################################
### 変更のコミット（ローカル）###
#################################

# コミットしたい変更したファイルをステージングする
git add 対象ファイル

# コミット (-mはメッセージのオプション)
git commit -m "ここにメッセージ"

##########################
### 変更をプッシュする ###
##########################

#　リモートレポジトリの確認
git remote -v

# プッシュ
git push リポジトリ名 ローカルブランチ名:リモートブランチ名
例)
git push origin feature#2:feature

########################################
### ローカルブランチを最新状態にする ###
########################################

# mainブランチに移動
git switch main

# ローカルのmain のコミット情報を更新
git fetch -p

# コミット情報を合体(マージ）する
git merge origin/main

※ fetch→mergeを一括でやる
git pull origin main

####################
### ロールバック ###
####################

# 最後のコミットを元に戻す（ステージングはそのまま）
git reset --soft HEAD^




